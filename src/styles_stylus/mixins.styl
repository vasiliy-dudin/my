bem-has($element)
	/&__{$element}
		{block}

bem-variant($modifier)
	/&--{$modifier}
		{block}



// Image Mixins
// - Responsive image
// - Retina image
// Responsive image
//
// Keep images from scaling beyond the width of their parents.
img-fluid()
	// Part 1: Set a maximum relative to the parent
	max-width: 100%
	// Part 2: Override the height to auto, otherwise images will be stretched
	// when setting a width and height attribute on the img element.
	height: auto

// Retina image
//
// Short retina mixin for setting background-image and -size.
img-retina($file-1x, $file-2x, $width-1x, $height-1x)
	background-image: url($file-1x)

	// Autoprefixer takes care of adding -webkit-min-device-pixel-ratio and -o-min-device-pixel-ratio,
	// but doesn't convert dppx=>dpi.
	// There's no such thing as unprefixed min-device-pixel-ratio since it's nonstandard.
	// Compatibility info: http://caniuse.com/#feat=css-media-resolution
	@media only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)
		background-image: url($file-2x)
		background-size: $width-1x $height-1x
		// Standardized





// Navbar vertical align
//
// Vertically center elements in the navbar.
// Example: an element has a height of 30px, so write out `.navbar-vertical-align(30px);` to calculate the appropriate top margin.
// @mixin navbar-vertical-align($element-height) {
//   margin-top: (($navbar-height - $element-height) / 2);
//   margin-bottom: (($navbar-height - $element-height) / 2);
// }




// Pagination
pagination-size($padding-y, $padding-x, $font-size, $line-height, $border-radius)
	.page-link
		padding: $padding-y $padding-x
		font-size: $font-size
	.page-item
		&:first-child
			.page-link
				border-left-radius(2px)
		&:last-child
			.page-link
				border-right-radius(2px)




// Создаёт медиазапросы
media-breakpoint-up($width-min)
	if $width-min > 0
		@media (min-width: $width-min)
			{block}
media-breakpoint-down($width-max)
	if $width-max > 0
		@media (max-width: $width-max)
			{block}



inner-shadow($horizontal=0, $vertical=1px, $blur=2px, $alpha=0.4)
	box-shadow: inset $horizontal $vertical $blur rgba(0, 0, 0, $alpha);


/*========================
Оформление кнопок
========================*/
button-variant-static($color, $bg, $border) // not interactive
	color: $color;
	background-color: $bg;
	border: $border;
	&.disabled,
	&[disabled],
	fieldset[disabled] &
		&,
		&:hover,
		&:focus,
		&:active,
		&.active
			color: $color;
			background-color: $bg;


/* ===================
svg иконки перед строкой.
======================

Использование:
.link-icon
	link-icon($width:27px, $height:27px, $top:2px, $bg-size:contain, $padding-right:6px);

.link-icon_fb
	.link-icon_image ($background-image: "imgs/skype.svg");
*/
link-icon($width, $height, $top, $bg-size=contain, $padding-right)
	&:before
		content: '';
		position: relative;
		top: $top;
		display: block;
		float: left;
		box-sizing content-box
		padding-right: $padding-right;
		width: $width;
		height: $height;
		background-size: $bg-size;
		background-repeat: no-repeat;
		background-position: 0 50%;


/*
link-icon_image($background-image)
	&:before
		background-image: data-uri('image/svg+xml;charset=UTF-8', '{$background-image');

*/


//Стрелка вниз для ссылки на выпадающий блок
caret()
	&:after
		display: inline-block;
		width: 0;
		height: 0;
		margin-left: 6px;
		vertical-align: middle;
		border-top: 4px dashed;
		border-top: 4px solid\9;
		border-right: 4px solid transparent;
		border-left: 4px solid transparent;
		content: '';




//Стрелка вниз для ссылки на выпадающий блок (без подчёркивания стрелки, нужная для ссылкок с тонким подчёркиванием)
caret-absolute()
	caret();
	position: relative;
	&:after
		position: absolute;
		top: 50%;





// Создаёт медиазапросы с готовой шириной
//Использование:
/*
+media($breakpoint-name: sm)
	.btn
		color #00b3ee
		*/
media($breakpoint-name)
	if $breakpoints[$breakpoint-name] > 0
		@media (min-width: $breakpoints[$breakpoint-name])
			{block}


media-down($breakpoint-name)
	if $breakpoints[$breakpoint-name] > 0
		@media (max-width: $breakpoints[$breakpoint-name] - 1)
			{block}
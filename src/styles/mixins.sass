@use 'variables' as *
	
// Image Mixins
// - Responsive image
// - Retina image

// Responsive image
//
// Keep images from scaling beyond the width of their parents.
@mixin img-fluid
	// Part 1: Set a maximum relative to the parent
	max-width: 100%
	// Part 2: Override the height to auto, otherwise images will be stretched
	// when setting a width and height attribute on the img element.
	height: auto



// Retina image
//
// Short retina mixin for setting background-image and -size.
@mixin img-retina($file-1x, $file-2x, $width-1x, $height-1x)
	background-image: url($file-1x)

	// Autoprefixer takes care of adding -webkit-min-device-pixel-ratio and -o-min-device-pixel-ratio,
	// but doesn't convert dppx=>dpi.
	// There's no such thing as unprefixed min-device-pixel-ratio since it's nonstandard.
	// Compatibility info: http://caniuse.com/#feat=css-media-resolution
	@media only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)
		background-image: url($file-2x)
		background-size: $width-1x $height-1x



@mixin inner-shadow($horizontal: 0, $vertical: 1px, $blur: 2px, $alpha: 0.4)
	box-shadow: inset $horizontal $vertical $blur rgba(0, 0, 0, $alpha)




// Создаёт медиазапросы с готовой шириной
@mixin media($breakpoint-name)
	@if map-get($breakpoints, $breakpoint-name) > 0
	@media (min-width: map-get($breakpoints, $breakpoint-name))
		@content

@mixin media-down($breakpoint-name)
	@if map-get($breakpoints, $breakpoint-name) > 0
	@media (max-width: map-get($breakpoints, $breakpoint-name) - 1)
		@content
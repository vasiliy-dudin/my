//Below is a list of the Sass rules that could not be converted to Stylus
// @at-root: line 44 in your Sass file

// scss-lint:disable QualifyingElement, DuplicateProperty
// Reboot
//
// Global resets to common HTML elements and more for easier usage by Bootstrap.
// Adds additional rules on top of Normalize.css, including several overrides.
// Reset the box-sizing
//
// Change from `box-sizing: content-box` to `border-box` so that when you add
// `padding` or `border`s to an element, the overall declared `width` does not
// change. For example, `width: 100px;` will always be `100px` despite the
// `border: 10px solid red;` and `padding: 20px;`.
//
// Heads up! This reset may cause conflicts with some third-party widgets. For
// recommendations on resolving such conflicts, see
// https://getbootstrap.com/getting-started/#third-box-sizing.
//
// Credit: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/

@-ms-viewport { width: device-width; }

html
	box-sizing: border-box
	-ms-overflow-style: scrollbar
	// Changes the default tap highlight to be completely transparent in iOS.
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0)
	// Make viewport responsive
	//
	// @viewport is needed because IE 10+ doesn't honor <meta name="viewport"> in
	// some cases. See https://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/.
	// Eventually @viewport will replace <meta name="viewport">.
	//
	// However, `device-width` is broken on IE 10 on Windows (Phone) 8,
	// (see https://timkadlec.com/2013/01/windows-phone-8-and-device-width/ and https://github.com/twbs/bootstrap/issues/10497)
	// and the fix for that involves a snippet of JavaScript to sniff the user agent
	// and apply some conditional CSS.
	//
	// See https://getbootstrap.com/getting-started/#support-ie10-width for the relevant hack.
	//
	// Wrap `@viewport` with `@at-root` for when folks do a nested import (e.g.,
	// `.class-name { @import "bootstrap"; }`).
	//Stylus does not support @at-root
	//@at-root
	//  @-ms-viewport
	//    width: device-width
	//
	// Reset HTML, body, and more
	//

	
*,
*::before,
*::after
	box-sizing: inherit

	

// Suppress the focus outline on elements that cannot be accessed via keyboard.
// This prevents an unwanted focus outline from appearing around elements that
// might still respond to pointer events.
//
// Credit: https://github.com/suitcss/base
[tabindex="-1"]:focus
	outline: none !important

//
// Typography
//




// Abbreviations
abbr[title],
abbr[data-original-title]
	cursor: help

address
	margin-bottom: 1rem
	font-style: normal
	line-height: inherit




dt
	font-weight: $dt-font-weight

dd
	margin-bottom: 0.5rem
	margin-left: 0

// Undo browser default
blockquote
	margin: 0 0 1rem


//
// Code
//
pre
	// Remove browser default top margin
	margin-top: 0
	// Reset browser default of `1em` to use `rem`s
	margin-bottom: 1rem
	// Normalize v4 removed this property, causing `<pre>` content to break out of wrapping code snippets
	overflow: auto

//
// Figures
//
figure
// Normalize adds `margin` to `figure`s as browsers apply it inconsistently.
// We reset that to create a better flow in-page.
	margin: 0 0 1rem

//
// Images
//
img
	// By default, `<img>`s are `inline-block`. This assumes that, and vertically
	// centers them. This won't apply should you reset them to `block` level.
	vertical-align: middle
	// Note: `<img>`s are deliberately not made responsive by default.
	// For the rationale behind this, see the comments on the `.img-fluid` class.
	// iOS "clickable elements" fix for role="button"

// Fixes "clickability" issue (and more generally, the firing of events such as focus as well)
// for traditionally non-focusable elements with role="button"
// see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile
[role="button"]
	cursor: pointer

// Avoid 300ms click delay on touch devices that support the `touch-action` CSS property.
//
// In particular, unlike most other browsers, IE11+Edge on Windows 10 on touch devices and IE Mobile 10-11
// DON'T remove the click delay when `<meta name="viewport" content="width=device-width">` is present.
// However, they DO support removing the click delay via `touch-action: manipulation`.
// See:
// * https://v4-alpha.getbootstrap.com/content/reboot/#click-delay-optimization-for-touch
// * http://caniuse.com/#feat=css-touch-action
// * https://patrickhlauke.github.io/touch/tests/results/#suppressing-300ms-delay
a,
area,
button,
[role="button"],
input,
label,
select,
summary,
textarea
	touch-action: manipulation



th // Centered by default, but left-align-ed to match the `td`s below.
	text-align: left

//
// Forms
//
label // Allow labels to use `margin` for spacing.
	display: inline-block

// Work around a Firefox/IE bug where the transparent `button` background
// results in a loss of the default `button` focus styles.
//
// Credit: https://github.com/suitcss/base/
button:focus
	outline: 1px dotted
	outline: 5px auto -webkit-focus-ring-color

input,
button,
select,
textarea
// Normalize includes `font: inherit;`, so `font-family`. `font-size`, etc are
// properly inherited. However, `line-height` isn't inherited there.
	line-height: inherit

input[type="radio"],
input[type="checkbox"]
// Apply a disabled cursor for radios and checkboxes.
//
// Note: Neither radios nor checkboxes can be readonly.
	&:disabled
		cursor: not-allowed

input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"]
	// Remove the default appearance of temporal inputs to avoid a Mobile Safari
	// bug where setting a custom line-height prevents text from being vertically
	// centered within the input.
	// See https://bugs.webkit.org/show_bug.cgi?id=139848
	// and https://github.com/twbs/bootstrap/issues/11266
	-webkit-appearance: listbox

textarea
// Textareas should really only resize vertically so they don't break their (horizontal) containers.
	resize: vertical

fieldset
	// Browsers set a default `min-width: min-content;` on fieldsets,
	// unlike e.g. `<div>`s, which have `min-width: 0;` by default.
	// So we reset that to ensure fieldsets behave more like a standard block element.
	// See https://github.com/twbs/bootstrap/issues/12359
	// and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements
	min-width: 0
	// Reset the default outline behavior of fieldsets so they don't affect page layout.
	padding: 0
	margin: 0
	border: 0
	
// Reset the entire legend element to match the `fieldset`
legend
	display: block
	width: 100%
	padding: 0
	margin-bottom: 0.5rem
	font-size: 1.5rem
	line-height: inherit

// This overrides the extra rounded corners on search inputs in iOS so that our
// `.form-control` class can properly style them. Note that this cannot simply
// be added to `.form-control` as it's not specific enough. For details, see
// https://github.com/twbs/bootstrap/issues/11586.
input[type="search"]
	-webkit-appearance: none

output
	display: inline-block

//  font-size: $font-size-base;
//  line-height: $line-height;
//  color: $input-color;
// Always hide an element with the `hidden` HTML attribute (from PureCSS).
[hidden]
	display: none !important
	

	
	
::selection
	background-color: $selection;
	text-shadow: none
	
::-moz-selection
	background-color: $selection
	text-shadow: none
	

// Custom Scrollbars
/*
::-webkit-scrollbar
	width 12px
	background #F1F1F1

::-webkit-scrollbar-track
	border-radius: 10px
	
::-webkit-scrollbar-thumb
	background #C1C1C1
	&:hover
		background #A8A8A8
	&:active
		background #787878
	border-radius 10px
	padding 5px 0*/
